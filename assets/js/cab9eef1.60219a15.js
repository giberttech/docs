"use strict";(self.webpackChunkgilbertsoftware=self.webpackChunkgilbertsoftware||[]).push([[590],{1715:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"resql/advanced-features","title":"Advanced Features","description":"ReSQL offers powerful advanced features for handling complex JSON structures and optimizing your database schemas.","source":"@site/docs/resql/advanced-features.md","sourceDirName":"resql","slug":"/resql/advanced-features","permalink":"/docs/resql/advanced-features","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/resql/advanced-features.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Basic Usage","permalink":"/docs/resql/basic-usage"},"next":{"title":"Examples and Use Cases","permalink":"/docs/resql/examples"}}');var l=s(4848),r=s(8453);const d={},t="Advanced Features",c={},a=[{value:"Complex JSON Handling",id:"complex-json-handling",level:2},{value:"Nested Object Flattening",id:"nested-object-flattening",level:3},{value:"Array Processing",id:"array-processing",level:3},{value:"Complex Types Option",id:"complex-types-option",level:3},{value:"SQL Dialect Optimization",id:"sql-dialect-optimization",level:2},{value:"Dialect-Specific Features",id:"dialect-specific-features",level:3},{value:"PostgreSQL",id:"postgresql",level:4},{value:"MySQL",id:"mysql",level:4},{value:"SQL Server",id:"sql-server",level:4},{value:"BigQuery",id:"bigquery",level:4},{value:"Redshift",id:"redshift",level:4},{value:"Data Type Mapping",id:"data-type-mapping",level:3},{value:"ID Generation Strategies",id:"id-generation-strategies",level:2},{value:"Consecutive Integer IDs (Default)",id:"consecutive-integer-ids-default",level:3},{value:"UUID Generation",id:"uuid-generation",level:3},{value:"Choosing the Right Strategy",id:"choosing-the-right-strategy",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Large Dataset Handling",id:"large-dataset-handling",level:3},{value:"Sampling Strategy",id:"sampling-strategy",level:4},{value:"Memory Management",id:"memory-management",level:4},{value:"Performance Tips",id:"performance-tips",level:4},{value:"Processing Optimization",id:"processing-optimization",level:3},{value:"Chunk Size Configuration",id:"chunk-size-configuration",level:4},{value:"Yield Frequency",id:"yield-frequency",level:4},{value:"Schema Customization",id:"schema-customization",level:2},{value:"Table Renaming",id:"table-renaming",level:3},{value:"Column Customization",id:"column-customization",level:3},{value:"Automatic Naming Rules",id:"automatic-naming-rules",level:4},{value:"Examples",id:"examples",level:4},{value:"Export Options",id:"export-options",level:2},{value:"SQL Export Formats",id:"sql-export-formats",level:3},{value:"Schema Only",id:"schema-only",level:4},{value:"Schema + Data",id:"schema--data",level:4},{value:"Data Only",id:"data-only",level:4},{value:"CSV Export Options",id:"csv-export-options",level:3},{value:"Individual Tables",id:"individual-tables",level:4},{value:"Individual Table Export",id:"individual-table-export",level:4},{value:"Python Export (Optional)",id:"python-export-optional",level:3},{value:"Error Handling and Validation",id:"error-handling-and-validation",level:2},{value:"JSON Validation",id:"json-validation",level:3},{value:"Syntax Validation",id:"syntax-validation",level:4},{value:"Structure Validation",id:"structure-validation",level:4},{value:"Error Recovery",id:"error-recovery",level:3},{value:"Graceful Degradation",id:"graceful-degradation",level:4},{value:"Error Reporting",id:"error-reporting",level:4},{value:"Workflow Integration",id:"workflow-integration",level:2},{value:"Batch Processing",id:"batch-processing",level:3},{value:"Multiple Files",id:"multiple-files",level:4},{value:"Automated Workflows",id:"automated-workflows",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"JSON Structure Design",id:"json-structure-design",level:3},{value:"Schema Optimization",id:"schema-optimization",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Troubleshooting Advanced Issues",id:"troubleshooting-advanced-issues",level:2},{value:"Complex Structure Problems",id:"complex-structure-problems",level:3},{value:"Circular References",id:"circular-references",level:4},{value:"Inconsistent Data Types",id:"inconsistent-data-types",level:4},{value:"Very Deep Nesting",id:"very-deep-nesting",level:4},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Memory Exhaustion",id:"memory-exhaustion",level:4},{value:"Slow Processing",id:"slow-processing",level:4},{value:"Browser Freezing",id:"browser-freezing",level:4},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"advanced-features",children:"Advanced Features"})}),"\n",(0,l.jsx)(n.p,{children:"ReSQL offers powerful advanced features for handling complex JSON structures and optimizing your database schemas."}),"\n",(0,l.jsx)(n.h2,{id:"complex-json-handling",children:"Complex JSON Handling"}),"\n",(0,l.jsx)(n.h3,{id:"nested-object-flattening",children:"Nested Object Flattening"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL automatically flattens nested objects into separate tables with foreign key relationships."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example Input:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "company": {\n    "name": "Acme Corp",\n    "address": {\n      "street": "123 Main St",\n      "city": "Anytown",\n      "country": "USA"\n    },\n    "employees": [\n      {\n        "name": "John Doe",\n        "department": {\n          "name": "Engineering",\n          "manager": "Jane Smith"\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Generated Schema:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"company"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"address"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"street"}),", ",(0,l.jsx)(n.code,{children:"city"}),", ",(0,l.jsx)(n.code,{children:"country"}),", ",(0,l.jsx)(n.code,{children:"company_id"})," (FK)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"employees"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"}),", ",(0,l.jsx)(n.code,{children:"company_id"})," (FK)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"department"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"}),", ",(0,l.jsx)(n.code,{children:"manager"}),", ",(0,l.jsx)(n.code,{children:"employees_id"})," (FK)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"array-processing",children:"Array Processing"}),"\n",(0,l.jsx)(n.p,{children:"Arrays are automatically converted to separate tables with foreign key relationships to the parent table."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example Input:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "users": [\n    {\n      "id": 1,\n      "name": "Alice",\n      "hobbies": ["reading", "swimming", "coding"],\n      "skills": [\n        {"name": "JavaScript", "level": "expert"},\n        {"name": "Python", "level": "intermediate"}\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Generated Schema:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"users"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hobbies"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"value"}),", ",(0,l.jsx)(n.code,{children:"users_id"})," (FK)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skills"})," table: ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"}),", ",(0,l.jsx)(n.code,{children:"level"}),", ",(0,l.jsx)(n.code,{children:"users_id"})," (FK)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"complex-types-option",children:"Complex Types Option"}),"\n",(0,l.jsx)(n.p,{children:'When "Allow complex types" is enabled, ReSQL preserves objects and arrays as JSON strings instead of flattening them.'}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Preserves original JSON structure"}),"\n",(0,l.jsx)(n.li,{children:"Faster processing for large datasets"}),"\n",(0,l.jsx)(n.li,{children:"Useful for configuration data"}),"\n",(0,l.jsx)(n.li,{children:"Maintains data integrity"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Configuration files"}),"\n",(0,l.jsx)(n.li,{children:"API responses with complex nested data"}),"\n",(0,l.jsx)(n.li,{children:"Data that doesn't need relational queries"}),"\n",(0,l.jsx)(n.li,{children:"Prototyping and development"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"sql-dialect-optimization",children:"SQL Dialect Optimization"}),"\n",(0,l.jsx)(n.h3,{id:"dialect-specific-features",children:"Dialect-Specific Features"}),"\n",(0,l.jsx)(n.p,{children:"Each SQL dialect is optimized for its specific database system:"}),"\n",(0,l.jsx)(n.h4,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Uses ",(0,l.jsx)(n.code,{children:"JSONB"})," for complex types"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TEXT"})," for strings"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TIMESTAMP"})," for dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NUMERIC"})," for numbers"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"mysql",children:"MySQL"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Uses ",(0,l.jsx)(n.code,{children:"JSON"})," for complex types"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TEXT"})," for strings"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"DATETIME"})," for dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"DECIMAL(10,2)"})," for numbers"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"sql-server",children:"SQL Server"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Uses ",(0,l.jsx)(n.code,{children:"NVARCHAR(MAX)"})," for strings"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"DATETIME2"})," for dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"DECIMAL(10,2)"})," for numbers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"BIT"})," for booleans"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"bigquery",children:"BigQuery"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Uses ",(0,l.jsx)(n.code,{children:"JSON"})," for complex types"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"STRING"})," for strings"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"DATETIME"})," for dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NUMERIC"})," for numbers"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"redshift",children:"Redshift"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Uses ",(0,l.jsx)(n.code,{children:"SUPER"})," for complex types"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"VARCHAR(65535)"})," for strings"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TIMESTAMP"})," for dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NUMERIC"})," for numbers"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"data-type-mapping",children:"Data Type Mapping"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL intelligently maps JSON data types to appropriate SQL types:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"JSON Type"}),(0,l.jsx)(n.th,{children:"ANSI SQL"}),(0,l.jsx)(n.th,{children:"PostgreSQL"}),(0,l.jsx)(n.th,{children:"MySQL"}),(0,l.jsx)(n.th,{children:"SQL Server"}),(0,l.jsx)(n.th,{children:"BigQuery"}),(0,l.jsx)(n.th,{children:"Redshift"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"string"}),(0,l.jsx)(n.td,{children:"VARCHAR(255)"}),(0,l.jsx)(n.td,{children:"TEXT"}),(0,l.jsx)(n.td,{children:"TEXT"}),(0,l.jsx)(n.td,{children:"NVARCHAR(MAX)"}),(0,l.jsx)(n.td,{children:"STRING"}),(0,l.jsx)(n.td,{children:"VARCHAR(65535)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"number"}),(0,l.jsx)(n.td,{children:"DECIMAL(10,2)"}),(0,l.jsx)(n.td,{children:"NUMERIC"}),(0,l.jsx)(n.td,{children:"DECIMAL(10,2)"}),(0,l.jsx)(n.td,{children:"DECIMAL(10,2)"}),(0,l.jsx)(n.td,{children:"NUMERIC"}),(0,l.jsx)(n.td,{children:"NUMERIC"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"integer"}),(0,l.jsx)(n.td,{children:"BIGINT"}),(0,l.jsx)(n.td,{children:"BIGINT"}),(0,l.jsx)(n.td,{children:"BIGINT"}),(0,l.jsx)(n.td,{children:"BIGINT"}),(0,l.jsx)(n.td,{children:"INT64"}),(0,l.jsx)(n.td,{children:"BIGINT"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"boolean"}),(0,l.jsx)(n.td,{children:"BOOLEAN"}),(0,l.jsx)(n.td,{children:"BOOLEAN"}),(0,l.jsx)(n.td,{children:"BOOLEAN"}),(0,l.jsx)(n.td,{children:"BIT"}),(0,l.jsx)(n.td,{children:"BOOL"}),(0,l.jsx)(n.td,{children:"BOOLEAN"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"date"}),(0,l.jsx)(n.td,{children:"DATE"}),(0,l.jsx)(n.td,{children:"TIMESTAMP"}),(0,l.jsx)(n.td,{children:"DATETIME"}),(0,l.jsx)(n.td,{children:"DATETIME2"}),(0,l.jsx)(n.td,{children:"DATETIME"}),(0,l.jsx)(n.td,{children:"TIMESTAMP"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"array"}),(0,l.jsx)(n.td,{children:"VARCHAR(MAX)"}),(0,l.jsx)(n.td,{children:"JSONB"}),(0,l.jsx)(n.td,{children:"JSON"}),(0,l.jsx)(n.td,{children:"NVARCHAR(MAX)"}),(0,l.jsx)(n.td,{children:"JSON"}),(0,l.jsx)(n.td,{children:"SUPER"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"object"}),(0,l.jsx)(n.td,{children:"VARCHAR(MAX)"}),(0,l.jsx)(n.td,{children:"JSONB"}),(0,l.jsx)(n.td,{children:"JSON"}),(0,l.jsx)(n.td,{children:"NVARCHAR(MAX)"}),(0,l.jsx)(n.td,{children:"JSON"}),(0,l.jsx)(n.td,{children:"SUPER"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"id-generation-strategies",children:"ID Generation Strategies"}),"\n",(0,l.jsx)(n.h3,{id:"consecutive-integer-ids-default",children:"Consecutive Integer IDs (Default)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Format"}),": 0, 1, 2, 3, ..."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Benefits"}),": Simple, efficient, human-readable"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use Cases"}),": Development, testing, small datasets"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Storage"}),": 4-8 bytes per ID"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"uuid-generation",children:"UUID Generation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Format"}),": ",(0,l.jsx)(n.code,{children:"550e8400-e29b-41d4-a716-446655440000"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Benefits"}),": Globally unique, distributed systems friendly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use Cases"}),": Production systems, microservices, data integration"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Storage"}),": 16 bytes per ID"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"choosing-the-right-strategy",children:"Choosing the Right Strategy"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use Consecutive Integers when:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Building simple applications"}),"\n",(0,l.jsx)(n.li,{children:"Working with small datasets"}),"\n",(0,l.jsx)(n.li,{children:"Need human-readable IDs"}),"\n",(0,l.jsx)(n.li,{children:"Performance is critical"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use UUIDs when:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Building distributed systems"}),"\n",(0,l.jsx)(n.li,{children:"Need globally unique identifiers"}),"\n",(0,l.jsx)(n.li,{children:"Integrating multiple data sources"}),"\n",(0,l.jsx)(n.li,{children:"Security is important"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,l.jsx)(n.h3,{id:"large-dataset-handling",children:"Large Dataset Handling"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL is optimized for handling large JSON files:"}),"\n",(0,l.jsx)(n.h4,{id:"sampling-strategy",children:"Sampling Strategy"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Automatically samples large datasets for schema analysis"}),"\n",(0,l.jsx)(n.li,{children:"Configurable sample size (default: 1000 records)"}),"\n",(0,l.jsx)(n.li,{children:"Full data processing after schema generation"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"memory-management",children:"Memory Management"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Web Worker processing for large files"}),"\n",(0,l.jsx)(n.li,{children:"Streaming data processing"}),"\n",(0,l.jsx)(n.li,{children:"Garbage collection optimization"}),"\n",(0,l.jsx)(n.li,{children:"Progress monitoring and cancellation"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"performance-tips",children:"Performance Tips"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use the desktop application"})," for files >50MB"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Enable progress monitoring"})," for long operations"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use sampling"})," for initial schema analysis"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Close other applications"})," when processing large files"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"processing-optimization",children:"Processing Optimization"}),"\n",(0,l.jsx)(n.h4,{id:"chunk-size-configuration",children:"Chunk Size Configuration"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Default chunk size: 1000 records"}),"\n",(0,l.jsx)(n.li,{children:"Adjustable based on available memory"}),"\n",(0,l.jsx)(n.li,{children:"Larger chunks = faster processing, more memory usage"}),"\n",(0,l.jsx)(n.li,{children:"Smaller chunks = slower processing, less memory usage"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"yield-frequency",children:"Yield Frequency"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Default yield every 5 operations"}),"\n",(0,l.jsx)(n.li,{children:"Allows UI updates during processing"}),"\n",(0,l.jsx)(n.li,{children:"Prevents browser freezing"}),"\n",(0,l.jsx)(n.li,{children:"Configurable for different performance needs"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"schema-customization",children:"Schema Customization"}),"\n",(0,l.jsx)(n.h3,{id:"table-renaming",children:"Table Renaming"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL allows you to customize table names:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Click the edit icon"})," next to any table name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Enter a new name"})," following SQL naming conventions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Press Enter"})," to save"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Foreign key references"})," are automatically updated"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Naming Conventions:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use lowercase letters"}),"\n",(0,l.jsx)(n.li,{children:"Use underscores for word separation"}),"\n",(0,l.jsx)(n.li,{children:"Avoid reserved SQL keywords"}),"\n",(0,l.jsx)(n.li,{children:"Keep names descriptive but concise"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"column-customization",children:"Column Customization"}),"\n",(0,l.jsx)(n.p,{children:"While ReSQL automatically generates column names, you can understand the naming patterns:"}),"\n",(0,l.jsx)(n.h4,{id:"automatic-naming-rules",children:"Automatic Naming Rules"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Root fields"}),": Keep original names"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nested objects"}),": Use parent name + field name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Arrays"}),": Use singular form of array name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Foreign keys"}),': Use referenced table name + "_id"']}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "user": {\n    "name": "John",\n    "profile": {\n      "bio": "Developer"\n    },\n    "posts": ["Post 1", "Post 2"]\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Generated Columns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"user.name"})," \u2192 ",(0,l.jsx)(n.code,{children:"name"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"user.profile.bio"})," \u2192 ",(0,l.jsx)(n.code,{children:"profile_bio"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"user.posts"})," \u2192 ",(0,l.jsx)(n.code,{children:"posts"})," table with ",(0,l.jsx)(n.code,{children:"value"})," column"]}),"\n",(0,l.jsxs)(n.li,{children:["Foreign key: ",(0,l.jsx)(n.code,{children:"user_id"})," in ",(0,l.jsx)(n.code,{children:"posts"})," table"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"export-options",children:"Export Options"}),"\n",(0,l.jsx)(n.h3,{id:"sql-export-formats",children:"SQL Export Formats"}),"\n",(0,l.jsx)(n.h4,{id:"schema-only",children:"Schema Only"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"CREATE TABLE statements"}),"\n",(0,l.jsx)(n.li,{children:"Foreign key constraints"}),"\n",(0,l.jsx)(n.li,{children:"Indexes and constraints"}),"\n",(0,l.jsx)(n.li,{children:"No data insertion"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"schema--data",children:"Schema + Data"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"CREATE TABLE statements"}),"\n",(0,l.jsx)(n.li,{children:"INSERT statements for all data"}),"\n",(0,l.jsx)(n.li,{children:"Foreign key constraints"}),"\n",(0,l.jsx)(n.li,{children:"Complete database setup"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"data-only",children:"Data Only"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"INSERT statements only"}),"\n",(0,l.jsx)(n.li,{children:"Assumes tables already exist"}),"\n",(0,l.jsx)(n.li,{children:"Useful for data migration"}),"\n",(0,l.jsx)(n.li,{children:"Preserves referential integrity"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"csv-export-options",children:"CSV Export Options"}),"\n",(0,l.jsx)(n.h4,{id:"individual-tables",children:"Individual Tables"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Export each table separately"}),"\n",(0,l.jsx)(n.li,{children:"Preserve data types"}),"\n",(0,l.jsx)(n.li,{children:"Include headers"}),"\n",(0,l.jsx)(n.li,{children:"UTF-8 encoding"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"individual-table-export",children:"Individual Table Export"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Export each table separately as CSV"}),"\n",(0,l.jsx)(n.li,{children:"Consistent naming convention"}),"\n",(0,l.jsx)(n.li,{children:"Include headers and data types"}),"\n",(0,l.jsx)(n.li,{children:"Ready for import into any database"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"python-export-optional",children:"Python Export (Optional)"}),"\n",(0,l.jsx)(n.p,{children:"When enabled, ReSQL can generate Python scripts for data processing:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import json\nimport pandas as pd\n\n# Load the generated schema\nschema = {\n    "users": ["id", "name", "email"],\n    "posts": ["id", "title", "content", "users_id"]\n}\n\n# Process your data\ndef process_data(json_data):\n    # Your custom processing logic\n    pass\n'})}),"\n",(0,l.jsx)(n.h2,{id:"error-handling-and-validation",children:"Error Handling and Validation"}),"\n",(0,l.jsx)(n.h3,{id:"json-validation",children:"JSON Validation"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL performs comprehensive JSON validation:"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-validation",children:"Syntax Validation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Valid JSON syntax"}),"\n",(0,l.jsx)(n.li,{children:"Proper bracket matching"}),"\n",(0,l.jsx)(n.li,{children:"Correct string escaping"}),"\n",(0,l.jsx)(n.li,{children:"Valid number formats"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"structure-validation",children:"Structure Validation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Consistent object structures"}),"\n",(0,l.jsx)(n.li,{children:"Array element consistency"}),"\n",(0,l.jsx)(n.li,{children:"Data type consistency"}),"\n",(0,l.jsx)(n.li,{children:"Circular reference detection"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"error-recovery",children:"Error Recovery"}),"\n",(0,l.jsx)(n.h4,{id:"graceful-degradation",children:"Graceful Degradation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Continue processing valid parts"}),"\n",(0,l.jsx)(n.li,{children:"Report errors for invalid sections"}),"\n",(0,l.jsx)(n.li,{children:"Provide detailed error messages"}),"\n",(0,l.jsx)(n.li,{children:"Suggest fixes for common issues"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"error-reporting",children:"Error Reporting"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Line and column information"}),"\n",(0,l.jsx)(n.li,{children:"Specific error descriptions"}),"\n",(0,l.jsx)(n.li,{children:"Suggested solutions"}),"\n",(0,l.jsx)(n.li,{children:"Context information"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"workflow-integration",children:"Workflow Integration"}),"\n",(0,l.jsx)(n.h3,{id:"batch-processing",children:"Batch Processing"}),"\n",(0,l.jsx)(n.p,{children:"ReSQL supports processing multiple files and can be integrated into your existing workflows:"}),"\n",(0,l.jsx)(n.h4,{id:"multiple-files",children:"Multiple Files"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Process multiple JSON files sequentially"}),"\n",(0,l.jsx)(n.li,{children:"Generate consolidated schemas"}),"\n",(0,l.jsx)(n.li,{children:"Merge related data structures"}),"\n",(0,l.jsx)(n.li,{children:"Handle file dependencies"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"automated-workflows",children:"Automated Workflows"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Scheduled processing"}),"\n",(0,l.jsx)(n.li,{children:"File system monitoring"}),"\n",(0,l.jsx)(n.li,{children:"Database deployment"}),"\n",(0,l.jsx)(n.li,{children:"Integration with existing tools"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(n.h3,{id:"json-structure-design",children:"JSON Structure Design"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use consistent field names"})," across objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Include unique identifiers"})," when possible"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Avoid deeply nested structures"})," (more than 3-4 levels)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use arrays for related data"})," rather than separate objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Keep object structures consistent"})," within arrays"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"schema-optimization",children:"Schema Optimization"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Choose appropriate data types"})," for your use case"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use foreign keys"})," to maintain referential integrity"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Consider indexing"})," for frequently queried columns"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Plan for data growth"})," when designing schemas"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Test with sample data"})," before production use"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Start with small samples"})," for testing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use the desktop application"})," for large files"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Monitor memory usage"})," during processing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use appropriate ID generation"})," strategy"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Consider data partitioning"})," for very large datasets"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting-advanced-issues",children:"Troubleshooting Advanced Issues"}),"\n",(0,l.jsx)(n.h3,{id:"complex-structure-problems",children:"Complex Structure Problems"}),"\n",(0,l.jsx)(n.h4,{id:"circular-references",children:"Circular References"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": JSON contains circular references"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),': Use "Allow complex types" option']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Alternative"}),": Restructure JSON to avoid circles"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"inconsistent-data-types",children:"Inconsistent Data Types"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": Same field has different types across objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": ReSQL handles this automatically"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Result"}),": Uses most permissive type (usually VARCHAR)"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"very-deep-nesting",children:"Very Deep Nesting"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": JSON has too many nesting levels"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),': Use "Allow complex types" for deep levels']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Alternative"}),": Flatten structure before processing"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,l.jsx)(n.h4,{id:"memory-exhaustion",children:"Memory Exhaustion"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": Out of memory errors"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Use desktop application"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Alternative"}),": Process smaller chunks"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"slow-processing",children:"Slow Processing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": Very slow schema generation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Use sampling for large datasets"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Alternative"}),": Optimize JSON structure"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"browser-freezing",children:"Browser Freezing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Problem"}),": Browser becomes unresponsive"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Use Web Workers (enabled by default)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Alternative"}),": Use desktop application"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsxs)(n.p,{children:["Now that you understand the advanced features, explore ",(0,l.jsx)(n.a,{href:"/docs/resql/examples",children:"Examples"})," for real-world use cases, or learn about ",(0,l.jsx)(n.a,{href:"/docs/resql/schema-evolution",children:"Schema Evolution"})," for handling changing data structures."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var i=s(6540);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);